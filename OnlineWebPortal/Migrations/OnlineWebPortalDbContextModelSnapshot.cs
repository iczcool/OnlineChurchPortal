// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineWebPortal.Data;

namespace OnlineWebPortal.Migrations
{
    [DbContext(typeof(OnlineWebPortalDbContext))]
    partial class OnlineWebPortalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OnlineWebPortal.Models.Address", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .HasMaxLength(100);

                    b.Property<string>("Postcode");

                    b.Property<string>("StreetName")
                        .HasMaxLength(100);

                    b.Property<string>("StreetNumber");

                    b.Property<string>("Town")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("OnlineWebPortal.Models.ChurchGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndTime");

                    b.Property<string>("GroupDescription");

                    b.Property<string>("GroupName")
                        .HasMaxLength(60);

                    b.Property<string>("LeaderName")
                        .HasMaxLength(60);

                    b.Property<string>("LeaderProfile")
                        .HasMaxLength(100);

                    b.Property<string>("Location")
                        .HasMaxLength(60);

                    b.Property<string>("MeetingDay");

                    b.Property<DateTime>("StartTime");

                    b.HasKey("ID");

                    b.ToTable("ChurchGroups");
                });

            modelBuilder.Entity("OnlineWebPortal.Models.Enquiry", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EnquiryBody");

                    b.Property<DateTime>("EnquiryDate");

                    b.Property<string>("EnquiryType")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("RegUser");

                    b.Property<int?>("RegUserID");

                    b.HasKey("ID");

                    b.HasIndex("RegUserID");

                    b.ToTable("Enquiries");
                });

            modelBuilder.Entity("OnlineWebPortal.Models.Event", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<DateTime>("EventDate");

                    b.Property<string>("EventName");

                    b.HasKey("ID");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("OnlineWebPortal.Models.Payment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<DateTime>("PaymentDate");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("RegUserID");

                    b.HasKey("ID");

                    b.HasIndex("RegUserID");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("OnlineWebPortal.Models.RegUser", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressID");

                    b.Property<DateTime?>("DateOFBirth")
                        .IsRequired();

                    b.Property<DateTime>("DateOfMembership");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("MaritalStatus")
                        .IsRequired();

                    b.Property<string>("MemType");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Roles");

                    b.Property<string>("Sex");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.HasKey("ID");

                    b.HasIndex("AddressID");

                    b.ToTable("RegUsers");
                });

            modelBuilder.Entity("OnlineWebPortal.Models.RegUserChurchGroup", b =>
                {
                    b.Property<int>("RegUserID");

                    b.Property<int>("ChurchGroupID");

                    b.HasKey("RegUserID", "ChurchGroupID");

                    b.HasIndex("ChurchGroupID");

                    b.ToTable("RegUserChurchGroups");
                });

            modelBuilder.Entity("OnlineWebPortal.Models.Enquiry", b =>
                {
                    b.HasOne("OnlineWebPortal.Models.RegUser")
                        .WithMany("Enquiries")
                        .HasForeignKey("RegUserID");
                });

            modelBuilder.Entity("OnlineWebPortal.Models.Payment", b =>
                {
                    b.HasOne("OnlineWebPortal.Models.RegUser", "RegUser")
                        .WithMany("Payments")
                        .HasForeignKey("RegUserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OnlineWebPortal.Models.RegUser", b =>
                {
                    b.HasOne("OnlineWebPortal.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID");
                });

            modelBuilder.Entity("OnlineWebPortal.Models.RegUserChurchGroup", b =>
                {
                    b.HasOne("OnlineWebPortal.Models.ChurchGroup", "ChurchGroups")
                        .WithMany("RegUserChurchGroups")
                        .HasForeignKey("ChurchGroupID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OnlineWebPortal.Models.RegUser", "RegUsers")
                        .WithMany("RegUserChurchGroups")
                        .HasForeignKey("RegUserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
